{"version":3,"sources":["components/MortgageCalculator/data/actions.js","components/MortgageCalculator/Widgets/BasicInputWidget/basicInputWidget.js","components/MortgageCalculator/Widgets/BasicOutputWidget/basicOutputWidget.js","components/MortgageCalculator/Widgets/PITIEstimatorWidget/pitiEstimatorWidget.js","components/MortgageCalculator/component.js","components/Nav/nav.js","components/DebtManager/component.js","components/BudgetManager/component.js","components/TaxEstimator/component.js","components/Home/component.js","App.js","serviceWorker.js","components/MortgageCalculator/data/Reducer.js","data/reducer.js","data/store.js","index.js"],"names":["MortgageConstants","mortgageActions","updatePropertyValue","value","type","payload","propertyValue","updateInterestRate","interestRate","updateTotalDuration","totalDuration","updateMonthlyPayments","updateTotalPayment","updateTotalInterest","updateMonthlyHOA","monthlyHOA","updatePropertyTaxRate","propertyTaxRate","updateAnnualInsuranceCost","annualInsuranceCost","BasicInputWidget","StartingAmountOnChange","event","props","parseFloat","target","InterestRateOnChange","TotalDurationOnChange","console","log","mortgageInfo","className","htmlFor","name","step","min","this","onChange","max","Component","connect","state","mortgageCalcReducer","dispatch","BasicOutputWidget","totalPayment","readOnly","monthlyPayment","totalInterest","PITIEstimatorWidget","monthlyHOAOnChange","propertyTaxRateOnChange","insuranceCostOnChange","getMonthlyExpenses","getChartData","canvas","data","datasets","backgroundColor","borderWidth","labels","toFixed","options","responsive","maintainAspectRatio","tooltips","callbacks","label","tooltipItem","legend","display","position","fontSize","boxWidth","fontColor","width","MortgageCalc","Nav","to","DebtManager","BudgetManager","TaxEstimator","Home","App","path","component","Boolean","window","location","hostname","match","initialState","combineReducers","action","Math","pow","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b50a4f4e.chunk.js","sourcesContent":["\r\nexport const MortgageConstants = {\r\n    UPDATE_PROPERTY_VALUE: 'MORTGAGE_UPDATE_PROPERTY_VALUE',\r\n    UPDATE_INTEREST_RATE: 'MORTGAGE_UPDATE_INTEREST_RATE',\r\n    UPDATE_TOTAL_DURATION: 'MORTGAGE_UPDATE_TOTAL_DURATION',\r\n    UPDATE_MONTHLY_PAYMENTS: 'MORTGAGE_UPDATE_MONTHLY_PAYMENTS',\r\n    UPDATE_TOTAL_PAYMENT: 'MORTGAGE_UPDATE_TOTAL_PAYMENT',\r\n    UPDATE_TOTAL_INTEREST: 'MORTGAGE_UPDATE_TOTAL_INTEREST',\r\n    UPDATE_MONTHLY_HOA: 'MORTGAGE_UPDATE_MONTHLY_HOA',\r\n    UPDATE_PROPERTY_TAX_RATE: 'MORTGAGE_UPDATE_PROPERTY_TAX_RATE',\r\n    UPDATE_ANNUAL_INSURANCE_COST: 'MORTGAGE_UPDATE_ANNUAL_INSURANCE_COST',\r\n\r\n}\r\n\r\nfunction updatePropertyValue(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_PROPERTY_VALUE,\r\n        payload: {\r\n            propertyValue: value\r\n        }\r\n    }\r\n}\r\nfunction updateInterestRate(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_INTEREST_RATE,\r\n        payload: {\r\n            interestRate: value\r\n        }\r\n    }\r\n}\r\nfunction updateTotalDuration(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_TOTAL_DURATION,\r\n        payload: {\r\n            totalDuration: value\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateMonthlyPayments(){\r\n    return{\r\n        type: MortgageConstants.UPDATE_MONTHLY_PAYMENTS\r\n    }\r\n}\r\n\r\nfunction updateTotalPayment(){\r\n    return{\r\n        type: MortgageConstants.UPDATE_TOTAL_PAYMENT\r\n    }\r\n}\r\n\r\nfunction updateTotalInterest(){\r\n    return{\r\n        type: MortgageConstants.UPDATE_TOTAL_INTEREST\r\n    }\r\n}\r\nfunction updateMonthlyHOA(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_MONTHLY_HOA,\r\n        payload: {\r\n            monthlyHOA: value\r\n        }\r\n    }\r\n}\r\nfunction updatePropertyTaxRate(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_PROPERTY_TAX_RATE,\r\n        payload: {\r\n            propertyTaxRate: value\r\n        }\r\n    }\r\n}\r\nfunction updateAnnualInsuranceCost(value){\r\n    return{\r\n        type: MortgageConstants.UPDATE_ANNUAL_INSURANCE_COST,\r\n        payload: {\r\n            annualInsuranceCost: value\r\n        }\r\n    }\r\n}\r\nexport const mortgageActions = \r\n{\r\n    updatePropertyValue: updatePropertyValue,\r\n    updateInterestRate: updateInterestRate,\r\n    updateTotalDuration: updateTotalDuration,\r\n    updateMonthlyPayments: updateMonthlyPayments,\r\n    updateTotalPayment: updateTotalPayment,\r\n    updateTotalInterest: updateTotalInterest,\r\n    updateMonthlyHOA: updateMonthlyHOA,\r\n    updatePropertyTaxRate: updatePropertyTaxRate,\r\n    updateAnnualInsuranceCost: updateAnnualInsuranceCost\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { mortgageActions } from \"../../data/actions\";\r\nimport './styles.css' //Styling for the Basic Input Widget\r\n\r\nclass BasicInputWidget extends Component {\r\n  \r\n  StartingAmountOnChange = (event) => {\r\n    this.props.updatePropertyValue(parseFloat(event.target.value))\r\n    this.props.updateMonthlyPayments()\r\n    this.props.updateTotalPayment()\r\n    this.props.updateTotalInterest()\r\n  }\r\n\r\n  InterestRateOnChange = (event) => {\r\n    if(event.target.value < 100 && event.target.value > 0)\r\n    {\r\n      this.props.updateInterestRate(parseFloat(event.target.value))\r\n    }\r\n    else if(event.target.value <= 0)\r\n    {\r\n      this.props.updateInterestRate(0)\r\n    }\r\n    else\r\n    {\r\n      this.props.updateInterestRate(100)\r\n    }\r\n    this.props.updateMonthlyPayments()\r\n    this.props.updateTotalPayment()\r\n    this.props.updateTotalInterest()\r\n  }\r\n  TotalDurationOnChange = (event) =>{\r\n    console.log(this.props.mortgageInfo)\r\n    this.props.updateTotalDuration(parseFloat(event.target.value))\r\n    this.props.updateMonthlyPayments()\r\n    this.props.updateTotalPayment()\r\n    this.props.updateTotalInterest()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"BasicInputWidget\">\r\n        <label htmlFor=\"mortgage-amount\">Mortgage Amount</label>\r\n        <span className=\"basic-input-input\">\r\n          $\r\n          <input\r\n            type=\"number\"\r\n            name=\"mortgage-amount\"\r\n            className=\"mortgage-amount-input\"\r\n            step=\"10000\"\r\n            min=\"0\"\r\n            value={this.props.mortgageInfo.propertyValue}\r\n            onChange={this.StartingAmountOnChange}\r\n          />\r\n        </span>\r\n        <label htmlFor=\"interest-rate\">Interest Rate (%)</label>\r\n        <span className=\"basic-input-input\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"interest-rate\"\r\n            step=\"1\"\r\n            max=\"100\"\r\n            min=\"0\"\r\n            value={this.props.mortgageInfo.interestRate}\r\n            onChange={this.InterestRateOnChange}\r\n          />\r\n        </span>\r\n        <label htmlFor=\"mortgage-duration\">Mortgage Duration (Years) </label>\r\n        <span className=\"basic-input-input\">\r\n          <input \r\n            type=\"number\" \r\n            name=\"mortgage-duration\" \r\n            step=\"5\" \r\n            min=\"0\" \r\n            value={this.props.mortgageInfo.totalDuration}\r\n            onChange={this.TotalDurationOnChange}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    mortgageInfo: state.mortgageCalcReducer\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    updatePropertyValue: (value) => {dispatch(mortgageActions.updatePropertyValue(value))},\r\n    updateInterestRate: (value) => {dispatch(mortgageActions.updateInterestRate(value))},\r\n    updateTotalDuration: (value) => {dispatch(mortgageActions.updateTotalDuration(value))},\r\n    updateMonthlyPayments: () => {dispatch(mortgageActions.updateMonthlyPayments())},\r\n    updateTotalPayment: () => {dispatch(mortgageActions.updateTotalPayment())},\r\n    updateTotalInterest: () => {dispatch(mortgageActions.updateTotalInterest())}\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicInputWidget);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { mortgageActions } from \"../../data/actions\";\r\nimport './styles.css' //Styling for the Basic Output Widget\r\n\r\nclass BasicOutputWidget extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.props.updateMonthlyPayments()\r\n    this.props.updateTotalPayment()\r\n    this.props.updateTotalInterest()\r\n  }\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"BasicOutputWidget\">\r\n        <label htmlFor=\"total-cost\">Total Cost of Mortgage</label>\r\n        <span className=\"basic-output-input\">\r\n          $\r\n          <input\r\n            type=\"number\"\r\n            name=\"total-cost\"\r\n            className=\"mortgage-amount-output\"\r\n            value={this.props.mortgageInfo.totalPayment}\r\n            readOnly\r\n          />\r\n        </span>\r\n        <label htmlFor=\"monthly-payment\">Monthly Payments</label>\r\n        <span className=\"basic-output-input\">\r\n          $\r\n          <input\r\n            type=\"number\"\r\n            name=\"monthly-payment\"\r\n            className=\"mortgage-amount-output\"\r\n            value={this.props.mortgageInfo.monthlyPayment}\r\n            readOnly\r\n          />\r\n        </span>\r\n        <label htmlFor=\"interest-paid\">Total Interest Paid</label>\r\n        <span className=\"basic-output-input\">\r\n          $\r\n          <input\r\n            type=\"number\"\r\n            name=\"interest-paid\"\r\n            className=\"mortgage-amount-output\"\r\n            value={this.props.mortgageInfo.totalInterest}\r\n            readOnly\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    mortgageInfo: state.mortgageCalcReducer\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    updateMonthlyPayments: () => {dispatch(mortgageActions.updateMonthlyPayments())},\r\n    updateTotalPayment: () => {dispatch(mortgageActions.updateTotalPayment())},\r\n    updateTotalInterest: () => {dispatch(mortgageActions.updateTotalInterest())}\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BasicOutputWidget);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Doughnut, Chart } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\nimport { mortgageActions } from \"../../data/actions\";\r\nimport './styles.css' //Styling for the PITI Estimator Widget\r\n\r\nclass PITIEstimatorWidget extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      monthlyHOA: 0,\r\n      data: {\r\n        labels: [\"Principle & Interest\", \"Taxes\", \"Insurance\", \"HOA\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  monthlyHOAOnChange = (event) =>{\r\n    this.props.updateMonthlyHOA(parseFloat(event.target.value))\r\n  }\r\n\r\n  propertyTaxRateOnChange = (event) => {\r\n    this.props.updatePropertyTaxRate(parseFloat(event.target.value))\r\n  }\r\n\r\n  insuranceCostOnChange = (event) => {\r\n    this.props.updateAnnualInsuranceCost(parseFloat(event.target.value))\r\n  }\r\n  getMonthlyExpenses = () => {\r\n    let value = 0;\r\n    value = parseFloat(this.props.mortgageInfo.monthlyPayment) + \r\n    parseFloat(((this.props.mortgageInfo.propertyTaxRate/100) * this.props.mortgageInfo.propertyValue)/12 ) + \r\n    parseFloat(this.props.mortgageInfo.annualInsuranceCost/12 ) + \r\n    parseFloat(this.props.mortgageInfo.monthlyHOA)\r\n\r\n    console.log(value)\r\n    return value\r\n  }\r\n  getChartData = (canvas) => {\r\n    const data = this.state.data\r\n    data.datasets = [\r\n      {\r\n        backgroundColor: [\r\n          \"#003f5c\",\r\n          \"#bc5090\",\r\n          \"#ff6361\",\r\n          \"#ffa600\",\r\n        ],\r\n        borderWidth: 1,\r\n        data: [\r\n          this.props.mortgageInfo.monthlyPayment, \r\n          ((this.props.mortgageInfo.propertyTaxRate/100) * this.props.mortgageInfo.propertyValue)/12, \r\n          this.props.mortgageInfo.annualInsuranceCost/12, \r\n          this.props.mortgageInfo.monthlyHOA],\r\n      },\r\n    ]\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PITIEstimatorWidget\">\r\n        <div className=\"InformationDiv\">\r\n        <label htmlFor=\"tax-rate\">Property Tax Rate (%)</label>\r\n        <span className=\"piti-input\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"tax-rate\"\r\n            step=\"1\"\r\n            max=\"100\"\r\n            min=\"0\"\r\n            value={this.props.mortgageInfo.propertyTaxRate}\r\n            onChange={this.propertyTaxRateOnChange}\r\n          />\r\n        </span>\r\n        <label htmlFor=\"home-insurance\">Annual Home Insurance</label>\r\n        <span className=\"piti-input\">\r\n          $\r\n          <input\r\n            type=\"number\"\r\n            name=\"home-insurance\"\r\n            className=\"piti-amount-input\"\r\n            step=\"1\"\r\n            max=\"100\"\r\n            min=\"0\"\r\n            value={this.props.mortgageInfo.annualInsuranceCost}\r\n            onChange={this.insuranceCostOnChange}\r\n          />\r\n        </span>\r\n        <label htmlFor=\"monthly-hoa\">Monthly HOA</label>\r\n        <span className=\"piti-input\">\r\n          $\r\n          <input type=\"number\" name=\"monthly-hoa\" className=\"piti-amount-input\" step=\"100\" min=\"0\" value={this.props.mortgageInfo.monthlyHOA} onChange={this.monthlyHOAOnChange}/>\r\n        </span>\r\n        <label htmlFor=\"monthly-expenses\">Monthly Housing Expenses</label>\r\n        <span className=\"piti-output\">\r\n          $\r\n          <input \r\n          type=\"number\" \r\n          name=\"monthly-hoa\" \r\n          className=\"piti-amount-output\" \r\n          value={this.getMonthlyExpenses().toFixed(2)} \r\n          readOnly/>\r\n        </span>\r\n        </div>\r\n        <div className=\"chart-div\">\r\n          <Doughnut\r\n            className=\"Chart\"\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              tooltips: {\r\n                callbacks: {\r\n                  label: function (tooltipItem, data) {\r\n                    return (\r\n                     \"$\" + data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] \r\n                    );\r\n                  },\r\n                },\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: \"left\",\r\n                labels: {\r\n                  fontSize: 9,\r\n                  boxWidth: 10,\r\n                  fontColor: \"#eee\",\r\n                },\r\n              },\r\n            }}\r\n            data={this.getChartData}\r\n            width={100}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    mortgageInfo: state.mortgageCalcReducer\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    updateMonthlyHOA: (value) => {dispatch(mortgageActions.updateMonthlyHOA(value))},\r\n    updatePropertyTaxRate: (value) => {dispatch(mortgageActions.updatePropertyTaxRate(value))},\r\n    updateAnnualInsuranceCost: (value) => {dispatch(mortgageActions.updateAnnualInsuranceCost(value))},\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PITIEstimatorWidget);\r\n","import React, { Component } from \"react\";\r\nimport BasicInputWidget from \"./Widgets/BasicInputWidget/basicInputWidget\";\r\nimport BasicOutputWidget from \"./Widgets/BasicOutputWidget/basicOutputWidget\";\r\nimport PITIEstimatorWidget from \"./Widgets/PITIEstimatorWidget/pitiEstimatorWidget\";\r\nimport './styles.css' //Styling for the MortgageCalc Component\r\n\r\nclass MortgageCalc extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MortgageCalc\">\r\n        <BasicInputWidget />\r\n        <BasicOutputWidget />\r\n        <PITIEstimatorWidget />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MortgageCalc;\r\n","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport './styles.css' //styling for the Navigation Bar\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NavigationBar\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/budget-manager\">Budget</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/debt-manager\">Debt</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/tax-estimator\">Taxes</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/mortgage-calculator\">Mortgage</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DebtManager extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div>DebtManager</div>;\r\n  }\r\n}\r\n\r\nexport default DebtManager;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BudgetManager extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div>BudgetManager</div>;\r\n  }\r\n}\r\n\r\nexport default BudgetManager;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TaxEstimator extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div className=\"TaxEstimator\">\r\n      TaxEstimator</div>;\r\n  }\r\n}\r\n\r\nexport default TaxEstimator;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div>Home</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport MortgageCalc from \"./components/MortgageCalculator/component\";\r\nimport Nav from \"./components/Nav/nav\";\r\nimport DebtManager from \"./components/DebtManager/component\";\r\nimport BudgetManager from \"./components/BudgetManager/component\";\r\nimport TaxEstimator from \"./components/TaxEstimator/component\";\r\nimport Home from \"./components/Home/component\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/mortgage-calculator\" component={MortgageCalc} />\r\n          <Route path=\"/tax-estimator\" component={TaxEstimator} />\r\n          <Route path=\"/debt-manager\" component={DebtManager} />\r\n          <Route path=\"/budget-manager\" component={BudgetManager} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {MortgageConstants} from './actions'\r\n\r\nconst initialState = {\r\n    propertyValue: 200000,\r\n    interestRate: 5,\r\n    totalDuration: 30,\r\n    monthlyPayment: 0,\r\n    totalPayment: 0,\r\n    totalInterest: 0,\r\n    monthlyHOA: 100,\r\n    propertyTaxRate: 1.5,\r\n    annualInsuranceCost: 1200,\r\n}\r\n\r\nexport default function mortgageCalcReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case MortgageConstants.UPDATE_PROPERTY_VALUE:\r\n            return{\r\n                ...state, \r\n                propertyValue: action.payload.propertyValue,       \r\n            };\r\n         case MortgageConstants.UPDATE_INTEREST_RATE:\r\n            return{\r\n                    ...state, \r\n                    interestRate: action.payload.interestRate\r\n                };       \r\n        case MortgageConstants.UPDATE_TOTAL_DURATION:\r\n            return{\r\n                    ...state, \r\n                    totalDuration: action.payload.totalDuration\r\n                };\r\n        case MortgageConstants.UPDATE_TOTAL_PAYMENT:\r\n            return {\r\n                ...state,\r\n                totalPayment: (state.monthlyPayment*state.totalDuration*12).toFixed(2)\r\n            }\r\n        case MortgageConstants.UPDATE_MONTHLY_PAYMENTS:\r\n            console.log(state)\r\n            return {\r\n                ...state,\r\n                monthlyPayment: (state.propertyValue * ((state.interestRate/100)/12) / (1 - Math.pow(1 + ((state.interestRate/100)/12), -(state.totalDuration*12)))).toFixed(2)\r\n\r\n            }\r\n        case MortgageConstants.UPDATE_TOTAL_INTEREST:\r\n            return {\r\n                ...state,\r\n                totalInterest: (state.totalPayment - state.propertyValue).toFixed(2)\r\n            }\r\n        case MortgageConstants.UPDATE_MONTHLY_HOA:\r\n            return{\r\n                ...state, \r\n                monthlyHOA: action.payload.monthlyHOA,       \r\n            };\r\n        case MortgageConstants.UPDATE_PROPERTY_TAX_RATE:\r\n            return{\r\n                ...state, \r\n                propertyTaxRate: action.payload.propertyTaxRate,       \r\n            };\r\n        case MortgageConstants.UPDATE_ANNUAL_INSURANCE_COST:\r\n            return{\r\n                ...state, \r\n                annualInsuranceCost: action.payload.annualInsuranceCost,       \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport mortgageCalcReducer from '../components/MortgageCalculator/data/Reducer'\r\n\r\nexport default combineReducers({\r\n    mortgageCalcReducer\r\n})","import {createStore} from 'redux';\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from './data/store'\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}